<project name="cortado" default="dist" basedir=".">
    <description>
Cortado ANT build file
    </description>

  <!-- set global properties for this build -->
  <property name="src" location="com"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <!-- set package properties -->
  <property name="version"      value="uninstalled" />

  <!-- we are still in autotool withdrawal -->
  <property name="prefix"      location="/usr/local" />
  <property name="exec_prefix" location="${prefix}" />
  <property name="libdir"      location="${exec_prefix}/lib" />
  <property name="datadir"     location="${prefix}/share" />

  <!-- read a file containing properties for plugins to build -->
<!--
  <property file="plugins.properties" />
-->

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

<!-- generate Configure-time options class -->
  <target name="configure">
    <exec dir="${basedir}" executable="./gen-Configure">
      <arg line="Built using ant." />
    </exec>
  </target>

<!-- prepare plugin.*.true variables  by parsing the exclude property-->
  <target name="plugins">
    <condition property="plugin.JPEG.false">
      <contains string="${exclude}" substring="JPEG" casesensitive="false" />
    </condition>
    <condition property="plugin.Mulaw.false">
      <contains string="${exclude}" substring="Mulaw" casesensitive="false" />
    </condition>
    <condition property="plugin.MultiPart.false">
      <contains string="${exclude}" substring="MultiPart" casesensitive="false" />
    </condition>
    <condition property="plugin.Ogg.false">
      <contains string="${exclude}" substring="Ogg" casesensitive="false" />
    </condition>
    <condition property="plugin.Smoke.false">
      <contains string="${exclude}" substring="Smoke" casesensitive="false" />
    </condition>
    <condition property="plugin.Theora.false">
      <contains string="${exclude}" substring="Theora" casesensitive="false" />
    </condition>
    <condition property="plugin.Vorbis.false">
      <contains string="${exclude}" substring="Vorbis" casesensitive="false" />
    </condition>
   </target>

<!-- generate includes and plugins.ini -->
  <target name="includes"
          depends="plugins,includes-delete,include-JPEG,include-Mulaw,include-MultiPart,include-Ogg,include-Smoke,include-Theora,include-Vorbis">
    <echo>Generating ${build}/includes</echo>
  </target>

  <target name="includes-delete">
    <delete file="${build}/includes" />
    <echo file="${build}/includes" append="true"
>fluendo/player/*
fluendo/utils/*
</echo>
    <delete file="${build}/plugins.ini" />
    <touch file="${build}/plugins.ini" />

  </target>

  <target name="include-JPEG" unless="plugin.JPEG.false">
    <echo>Including JPEG</echo>
    <echo file="${build}/includes" append="true"
>fluendo/plugin/JPEG*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.JPEGPlugin
</echo>
  </target>

  <target name="include-Mulaw" unless="plugin.Mulaw.false">
    <echo>Including Mulaw</echo>
    <echo file="${build}/includes" append="true"
>fluendo/plugin/Mulaw*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.MulawPlugin
</echo>
  </target>

  <target name="include-MultiPart" unless="plugin.MultiPart.false">
    <echo>Including MultiPart</echo>
    <echo file="${build}/includes" append="true"
>fluendo/plugin/MultiPart*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.MultiPartPlugin
</echo>
  </target>

  <target name="include-Ogg" unless="plugin.Ogg.false">
    <echo>Including Ogg</echo>
    <echo file="${build}/includes" append="true"
>jcraft/ogg/*
fluendo/plugin/Ogg*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.OggPlugin
</echo>
  </target>

  <target name="include-Smoke" unless="plugin.Smoke.false">
    <echo>Including Smoke</echo>
    <echo file="${build}/includes" append="true"
>fluendo/codecs/Smoke*
fluendo/plugin/Smoke*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.SmokePlugin
</echo>
  </target>

  <target name="include-Theora" unless="plugin.Theora.false">
    <echo>Including Theora</echo>
    <echo file="${build}/includes" append="true"
>fluendo/jheora/*
fluendo/plugin/Theora*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.TheoraPlugin
</echo>
  </target>

  <target name="include-Vorbis" unless="plugin.Vorbis.false">
    <echo>Including Vorbis</echo>
    <echo file="${build}/includes" append="true"
>jcraft/jorbis/*
fluendo/plugin/Vorbis*
</echo>
    <echo file="${build}/plugins.ini" append="true"
>com.fluendo.plugin.VorbisPlugin
</echo>
  </target>

<!-- compilation steps -->
  <target name="compile" depends="compile-jikes,configure,includes" />

<!-- sun java build -->
  <target name="compile-sun" depends="init"
        description="compile the source using sun java (set JAVA_HOME)" >
    <!-- Compile the java code from ${src} into ${build} -->
    <!-- using our stubs as classpath, and with a 1.1 target -->

    <javac 
           classpath="stubs"
           srcdir="${src}" destdir="${build}" 
           target="1.1"
           includesfile="${build}/includes" />
  </target>

 
<!-- jikes build -->
  <target name="compile-jikes" depends="init,includes"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <!-- using our stubs as classpath, and with a 1.1 target -->

    <javac 
           compiler="jikes" 
           classpath="stubs"
           srcdir="${src}" destdir="${build}" 
           includesfile="${build}/includes"
           target="1.1">
      <!-- for some reason jikes ignores the target given above this -->
      <compilerarg line="-target 1.1" />
    </javac>
  </target>

  <!-- generate plugins.ini -->
  <target name="ini" description="generate plugins.ini">
    <copy todir="${build}">
      <fileset file="plugins.ini" />
    </copy>
  </target>

<!-- clean out unwanted plugins -->
  <target name="testcheck" if="test">
    <condition property="testyes">
      <equals arg1="${test}" arg2="yes" />
    </condition>
  </target>

  <target name="test" if="testyes" depends="testcheck">
    <echo>${test}</echo>
  </target>

  <target name="jar" depends="clean,compile,ini"
        description="generate the jar file">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/applet"/>

    <!-- Put everything in ${build} into the cortado.jar file -->
    <jar jarfile="${dist}/applet/cortado.jar" basedir="${build}"/>
  </target>

  <target name="install" depends="jar"
          description="install cortado">
    <!-- Create the installation locations -->
    <mkdir dir="${libdir}/cortado"/>

    <!-- Put everything in ${build} into $libdir/cortado -->
    <copy todir="${libdir}/cortado">
      <fileset dir="build">
        <include name="com/jcraft/*/*.class"/>
        <include name="com/fluendo/*/*.class"/>
        <include name="${build}/applet/cortado.jar"/>
      </fileset>
    </copy>

    <!-- Install documentation -->
    <copy todir="${datadir}/cortado-${version}">
      <fileset dir=".">
        <include name="LICENSE.*"/>
        <include name="TODO"/>
      </fileset>
    </copy>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
